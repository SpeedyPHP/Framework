#!/usr/bin/env php
<?php
defined("DS") or define("DS", DIRECTORY_SEPARATOR);
defined('SPEEDY_ENV')  	or define("SPEEDY_ENV", (getenv("SPEEDY_ENV")) ? getenv('SPEEDY_ENV') : 'development');
defined('BIN_ROOT') 	or define('BIN_ROOT', dirname(dirname(__FILE__)));	// Define the root directory of App
define("SPEEDY_PATH", 	(getenv('SPEEDY_PATH')) ? getenv('SPEEDY_PATH') : BIN_ROOT);
define("SPEEDY_TEMPLATES", 	dirname(dirname(__FILE__)) . DS . "tpls" . DS);
define("SPEEDY_CLI", 		dirname(__FILE__));
define("APP_ROOT", 		getcwd());

$pathToDefines = APP_ROOT . DS . 'public' . DS . 'defines.php';
if (file_exists($pathToDefines)) {
	include $pathToDefines;
}

defined("CONFIG_PATH") 	or define("CONFIG_PATH", 	APP_ROOT . DS . 'config');
defined("APP_PATH") 	or define("APP_PATH", 		APP_ROOT . DS . 'app');
defined("VENDOR_PATH") 	or define('VENDOR_PATH', 	APP_ROOT . DS . 'vendor');
defined("STDOUT") or define("STDOUT", fopen("php://stdout", "w"));


if (file_exists(VENDOR_PATH . DS . 'autoload.php')) {
  	require_once VENDOR_PATH . DS . 'autoload.php';
} elseif (file_exists(SPEEDY_PATH . DS . "lib")) {
  require_once SPEEDY_PATH . DS . "lib" . DS . "Speedy" . DS . "Loader.php";
  \Speedy\Loader::instance()->registerNamespace('speedy', SPEEDY_PATH . DS . "lib" . DS . "Speedy");
} else {
  trigger_error("Unable to load Speedy library, please run in app directory or set environment variable SPEEDY_PATH", E_ERROR);
}

if (function_exists('ini_set')) {
	ini_set('include_path', SPEEDY_PATH . PATH_SEPARATOR . APP_PATH . PATH_SEPARATOR . ini_get('include_path'));
}

function output($str = "") {
	if (is_array($str)) {
		$str = print_r($str, true);
	}
	fwrite(STDOUT, $str . "\n");
}

if (class_exists('App')) {
  App::instance();
	define("APP_LOADED", true);
} else {
  define("APP_LOADED", false);
}

require_once "Speedy.php";
